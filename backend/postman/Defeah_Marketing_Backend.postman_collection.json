{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "Defeah Marketing Backend API",
		"description": "Complete API collection for the Defeah Marketing Backend - an autonomous Instagram marketing system for the Defeah home decor brand.\n\n## Overview\nThis collection includes all API endpoints for:\n- User authentication and management\n- Instagram OAuth integration\n- Post creation and management\n- Campaign management\n- Analytics and insights\n- AI content generation\n- Media file management\n\n## Setup Instructions\n1. Import this collection into Postman\n2. Set up environment variables (see Environment section)\n3. Run the authentication requests to get JWT tokens\n4. Use the tokens in subsequent requests\n\n## Environment Variables Required\n- `base_url`: API base URL (e.g., http://localhost:8080 or https://api.defeah.com)\n- `access_token`: JWT access token (auto-populated after login)\n- `user_id`: Current user ID (auto-populated after login)\n- `instagram_auth_code`: Instagram OAuth authorization code\n- `test_post_id`: Test post ID for CRUD operations\n- `test_campaign_id`: Test campaign ID for management\n\n⚠️ **LLM Development Disclaimer**: This API collection has been generated by AI as part of a comprehensive system design demonstration. While functional, it should be thoroughly tested before use in any production environment.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test response",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('data');",
									"    pm.expect(response.data).to.have.property('id');",
									"    pm.expect(response.data).to.have.property('email');",
									"});",
									"",
									"// Store user ID for later use",
									"const response = pm.response.json();",
									"if (response.data && response.data.id) {",
									"    pm.environment.set(\"user_id\", response.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@defeah.com\",\n    \"password\": \"SecurePassword123!\",\n    \"full_name\": \"Test User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account with email, password, and full name."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test response",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('access_token');",
									"    pm.expect(response).to.have.property('token_type', 'bearer');",
									"});",
									"",
									"// Store access token for authentication",
									"const response = pm.response.json();",
									"if (response.access_token) {",
									"    pm.environment.set(\"access_token\", response.access_token);",
									"}",
									"",
									"if (response.user && response.user.id) {",
									"    pm.environment.set(\"user_id\", response.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test@defeah.com\",\n    \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Authenticate user and receive JWT access token."
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"    pm.expect(response).to.have.property('email');",
									"    pm.expect(response).to.have.property('full_name');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user information."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has new access token\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('access_token');",
									"});",
									"",
									"// Update stored token",
									"const response = pm.response.json();",
									"if (response.access_token) {",
									"    pm.environment.set(\"access_token\", response.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh"
							]
						},
						"description": "Refresh JWT access token before expiration."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout user and invalidate token."
					},
					"response": []
				}
			],
			"description": "User authentication endpoints including registration, login, token refresh, and logout."
		},
		{
			"name": "Instagram Integration",
			"item": [
				{
					"name": "Connect Instagram Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Instagram account connected\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('instagram_user_id');",
									"    pm.expect(response).to.have.property('username');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auth_code\": \"{{instagram_auth_code}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/instagram/connect",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"instagram",
								"connect"
							]
						},
						"description": "Connect Instagram business account using OAuth authorization code."
					},
					"response": []
				},
				{
					"name": "Get Instagram Account Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/instagram/account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"instagram",
								"account"
							]
						},
						"description": "Get connected Instagram account information and statistics."
					},
					"response": []
				},
				{
					"name": "Disconnect Instagram Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/instagram/account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"instagram",
								"account"
							]
						},
						"description": "Disconnect Instagram account and revoke access tokens."
					},
					"response": []
				},
				{
					"name": "Get Instagram Insights",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/instagram/insights?period=week",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"instagram",
								"insights"
							],
							"query": [
								{
									"key": "period",
									"value": "week",
									"description": "Time period: day, week, month"
								}
							]
						},
						"description": "Get Instagram account insights and analytics data."
					},
					"response": []
				}
			],
			"description": "Instagram OAuth integration and account management endpoints."
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Post created successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"    pm.expect(response).to.have.property('caption');",
									"    pm.expect(response).to.have.property('status', 'draft');",
									"});",
									"",
									"// Store post ID for other requests",
									"const response = pm.response.json();",
									"if (response.id) {",
									"    pm.environment.set(\"test_post_id\", response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Beautiful Home Decor Collection\",\n    \"caption\": \"Discover our latest collection of stunning home decor pieces that will transform your living space! ✨🏠 #HomeDecor #InteriorDesign #Defeah\",\n    \"hashtags\": [\"homedecor\", \"interiordesign\", \"defeah\", \"furniture\", \"design\"],\n    \"media_type\": \"image\",\n    \"media_urls\": [\n        \"https://example.com/image1.jpg\"\n    ],\n    \"scheduled_at\": \"2024-12-31T18:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							]
						},
						"description": "Create a new post with content, media, and scheduling options."
					},
					"response": []
				},
				{
					"name": "Get All Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/posts?limit=10&offset=0&status=published",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Number of posts to return"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Number of posts to skip"
								},
								{
									"key": "status",
									"value": "published",
									"description": "Filter by status: draft, scheduled, published, failed, archived"
								}
							]
						},
						"description": "Get paginated list of user's posts with optional filtering."
					},
					"response": []
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/posts/{{test_post_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{test_post_id}}"
							]
						},
						"description": "Get specific post details by ID."
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated: Beautiful Home Decor Collection\",\n    \"caption\": \"Updated caption: Discover our latest collection of stunning home decor pieces! 🏠✨ #HomeDecor #Updated\",\n    \"hashtags\": [\"homedecor\", \"interiordesign\", \"defeah\", \"updated\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/posts/{{test_post_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{test_post_id}}"
							]
						},
						"description": "Update existing post content and metadata."
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/posts/{{test_post_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{test_post_id}}"
							]
						},
						"description": "Delete post (soft delete - marks as deleted)."
					},
					"response": []
				},
				{
					"name": "Publish Post to Instagram",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/posts/{{test_post_id}}/publish",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{test_post_id}}",
								"publish"
							]
						},
						"description": "Publish post immediately to Instagram."
					},
					"response": []
				},
				{
					"name": "Get Post Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/posts/{{test_post_id}}/analytics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{test_post_id}}",
								"analytics"
							]
						},
						"description": "Get analytics data for a specific post."
					},
					"response": []
				}
			],
			"description": "Content post management including creation, editing, publishing, and analytics."
		},
		{
			"name": "Campaigns",
			"item": [
				{
					"name": "Create Campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Campaign created successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"    pm.expect(response).to.have.property('name');",
									"    pm.expect(response).to.have.property('status', 'draft');",
									"});",
									"",
									"// Store campaign ID",
									"const response = pm.response.json();",
									"if (response.id) {",
									"    pm.environment.set(\"test_campaign_id\", response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Holiday Home Decor Campaign\",\n    \"description\": \"Showcase our beautiful holiday decorations and seasonal collections\",\n    \"theme\": \"holiday_collection\",\n    \"start_date\": \"2024-12-01T00:00:00Z\",\n    \"end_date\": \"2024-12-31T23:59:59Z\",\n    \"budget\": 1000.00,\n    \"content_strategy\": {\n        \"posting_frequency\": \"daily\",\n        \"optimal_times\": [\"09:00\", \"15:00\", \"19:00\"],\n        \"content_types\": [\"image\", \"carousel\"],\n        \"tone\": \"festive_warm\"\n    },\n    \"target_metrics\": {\n        \"posts_count\": 31,\n        \"engagement_rate\": 6.0,\n        \"reach_target\": 15000,\n        \"roi_target\": 250\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns"
							]
						},
						"description": "Create a new marketing campaign with strategy and target metrics."
					},
					"response": []
				},
				{
					"name": "Get All Campaigns",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns?limit=10&offset=0&status=active",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						},
						"description": "Get paginated list of user's campaigns with optional filtering."
					},
					"response": []
				},
				{
					"name": "Get Campaign by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns/{{test_campaign_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns",
								"{{test_campaign_id}}"
							]
						},
						"description": "Get specific campaign details and performance metrics."
					},
					"response": []
				},
				{
					"name": "Update Campaign",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Holiday Campaign\",\n    \"description\": \"Updated description for our holiday campaign\",\n    \"budget\": 1500.00,\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns/{{test_campaign_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns",
								"{{test_campaign_id}}"
							]
						},
						"description": "Update campaign details, budget, and settings."
					},
					"response": []
				},
				{
					"name": "Get Campaign Posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns/{{test_campaign_id}}/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns",
								"{{test_campaign_id}}",
								"posts"
							]
						},
						"description": "Get all posts associated with a specific campaign."
					},
					"response": []
				},
				{
					"name": "Get Campaign Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns/{{test_campaign_id}}/analytics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns",
								"{{test_campaign_id}}",
								"analytics"
							]
						},
						"description": "Get comprehensive analytics for campaign performance."
					},
					"response": []
				},
				{
					"name": "Delete Campaign",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/campaigns/{{test_campaign_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"campaigns",
								"{{test_campaign_id}}"
							]
						},
						"description": "Delete campaign (soft delete - archives the campaign)."
					},
					"response": []
				}
			],
			"description": "Marketing campaign management including creation, analytics, and post organization."
		},
		{
			"name": "AI Content Generation",
			"item": [
				{
					"name": "Generate Caption",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"Create an engaging Instagram caption for a modern living room furniture set with warm lighting and cozy atmosphere\",\n    \"brand_voice\": \"professional_friendly\",\n    \"target_audience\": \"homeowners_25_45\",\n    \"max_length\": 2000,\n    \"include_hashtags\": true,\n    \"hashtag_count\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ai/generate/caption",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ai",
								"generate",
								"caption"
							]
						},
						"description": "Generate AI-powered Instagram caption with brand voice consistency."
					},
					"response": []
				},
				{
					"name": "Generate Hashtags",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Beautiful modern dining table with elegant chairs in a bright, airy room\",\n    \"category\": \"furniture\",\n    \"count\": 15,\n    \"include_trending\": true,\n    \"include_niche\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ai/generate/hashtags",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ai",
								"generate",
								"hashtags"
							]
						},
						"description": "Generate relevant hashtags for content based on description and category."
					},
					"response": []
				},
				{
					"name": "Generate Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"prompt\": \"A beautifully arranged living room with modern furniture, warm lighting, and elegant home decor accessories\",\n    \"style\": \"professional_photography\",\n    \"aspect_ratio\": \"1:1\",\n    \"quality\": \"hd\",\n    \"brand_elements\": {\n        \"color_palette\": [\"warm_neutrals\", \"earth_tones\"],\n        \"style_guide\": \"modern_minimalist\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ai/generate/image",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ai",
								"generate",
								"image"
							]
						},
						"description": "Generate AI-powered images using DALL-E 3 with brand consistency."
					},
					"response": []
				},
				{
					"name": "Analyze Content Performance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content_type\": \"post\",\n    \"content_id\": \"{{test_post_id}}\",\n    \"analysis_type\": \"engagement_prediction\",\n    \"include_recommendations\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ai/analyze/content",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ai",
								"analyze",
								"content"
							]
						},
						"description": "Analyze content for performance prediction and optimization recommendations."
					},
					"response": []
				},
				{
					"name": "Get AI Generation History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/ai/history?limit=20&type=caption&start_date=2024-01-01",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ai",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "type",
									"value": "caption"
								},
								{
									"key": "start_date",
									"value": "2024-01-01"
								}
							]
						},
						"description": "Get history of AI content generations with cost tracking."
					},
					"response": []
				}
			],
			"description": "AI-powered content generation including captions, hashtags, images, and performance analysis."
		},
		{
			"name": "Media Management",
			"item": [
				{
					"name": "Upload Media File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/path/to/your/image.jpg"
								},
								{
									"key": "alt_text",
									"value": "Beautiful living room with modern furniture",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "furniture,living-room,modern",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/media/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"media",
								"upload"
							]
						},
						"description": "Upload media files (images/videos) with metadata and tags."
					},
					"response": []
				},
				{
					"name": "Get Media Files",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/media?limit=20&media_type=image&tags=furniture",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"media"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "media_type",
									"value": "image"
								},
								{
									"key": "tags",
									"value": "furniture"
								}
							]
						},
						"description": "Get paginated list of uploaded media files with filtering options."
					},
					"response": []
				},
				{
					"name": "Get Media File by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/media/{media_id}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"media",
								"{media_id}"
							]
						},
						"description": "Get specific media file details and metadata."
					},
					"response": []
				},
				{
					"name": "Update Media Metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alt_text\": \"Updated: Modern living room furniture arrangement\",\n    \"tags\": [\"furniture\", \"living-room\", \"modern\", \"updated\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/media/{media_id}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"media",
								"{media_id}"
							]
						},
						"description": "Update media file metadata, alt text, and tags."
					},
					"response": []
				},
				{
					"name": "Delete Media File",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/media/{media_id}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"media",
								"{media_id}"
							]
						},
						"description": "Delete media file from storage."
					},
					"response": []
				}
			],
			"description": "Media file management including upload, organization, and metadata handling."
		},
		{
			"name": "Analytics",
			"item": [
				{
					"name": "Get User Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/dashboard",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"dashboard"
							]
						},
						"description": "Get comprehensive dashboard analytics including posts, campaigns, and performance metrics."
					},
					"response": []
				},
				{
					"name": "Get Performance Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/performance?period=month&metric=engagement_rate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"performance"
							],
							"query": [
								{
									"key": "period",
									"value": "month",
									"description": "Time period: day, week, month, quarter, year"
								},
								{
									"key": "metric",
									"value": "engagement_rate",
									"description": "Specific metric to focus on"
								}
							]
						},
						"description": "Get detailed performance analytics with time-series data."
					},
					"response": []
				},
				{
					"name": "Get AI Usage Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/ai-usage?period=month",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"ai-usage"
							],
							"query": [
								{
									"key": "period",
									"value": "month"
								}
							]
						},
						"description": "Get AI usage statistics including costs, generation counts, and performance metrics."
					},
					"response": []
				},
				{
					"name": "Get ROI Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/roi?period=quarter",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"roi"
							],
							"query": [
								{
									"key": "period",
									"value": "quarter"
								}
							]
						},
						"description": "Get return on investment analytics including cost per engagement and campaign ROI."
					},
					"response": []
				},
				{
					"name": "Export Analytics Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"export_type\": \"csv\",\n    \"data_types\": [\"posts\", \"campaigns\", \"analytics\"],\n    \"date_range\": {\n        \"start_date\": \"2024-01-01\",\n        \"end_date\": \"2024-12-31\"\n    },\n    \"include_ai_data\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/export",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"export"
							]
						},
						"description": "Export analytics data in various formats (CSV, JSON, PDF)."
					},
					"response": []
				}
			],
			"description": "Analytics and reporting endpoints for performance tracking and insights."
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Service is healthy\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('status', 'healthy');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check if the API service is healthy and responsive."
					},
					"response": []
				},
				{
					"name": "API Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get API root information including version and available endpoints."
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/docs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"docs"
							]
						},
						"description": "Access interactive API documentation (Swagger UI)."
					},
					"response": []
				},
				{
					"name": "OpenAPI Schema",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/openapi.json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"openapi.json"
							]
						},
						"description": "Get OpenAPI 3.0 schema specification in JSON format."
					},
					"response": []
				}
			],
			"description": "System endpoints for health checks, documentation, and API information."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"",
					"// Set default base URL if not set",
					"if (!pm.environment.get(\"base_url\")) {",
					"    pm.environment.set(\"base_url\", \"http://localhost:8080\");",
					"}",
					"",
					"// Add timestamp to requests for debugging",
					"pm.request.headers.add({",
					"    key: \"X-Request-Timestamp\",",
					"    value: new Date().toISOString()",
					"});",
					"",
					"// Add request ID for tracing",
					"pm.request.headers.add({",
					"    key: \"X-Request-ID\",",
					"    value: pm.variables.replaceIn(\"{{$guid}}\")",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"",
					"// Check if response time is reasonable",
					"pm.test(\"Response time is less than 2000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"// Check for proper content type on JSON responses",
					"if (pm.response.headers.get(\"Content-Type\") && pm.response.headers.get(\"Content-Type\").includes(\"application/json\")) {",
					"    pm.test(\"Response is valid JSON\", function () {",
					"        pm.response.to.be.json;",
					"    });",
					"}",
					"",
					"// Check for security headers",
					"pm.test(\"Security headers present\", function () {",
					"    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.exist;",
					"    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.exist;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_post_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_campaign_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "instagram_auth_code",
			"value": "",
			"type": "string"
		}
	]
}