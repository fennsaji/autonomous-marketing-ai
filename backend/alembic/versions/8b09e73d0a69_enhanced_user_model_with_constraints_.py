"""Enhanced user model with constraints and indexes

Revision ID: 8b09e73d0a69
Revises: 4d09239fd5b5
Create Date: 2025-06-14 12:38:02.538688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8b09e73d0a69'
down_revision: Union[str, None] = '4d09239fd5b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('instagram_username', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('timezone', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('language', sa.String(length=5), nullable=False))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('login_count', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('failed_login_attempts', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('locked_until', sa.DateTime(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('gen_random_uuid()'),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.create_index('idx_users_active_verified', 'users', ['is_active', 'is_verified'], unique=False)
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_instagram_info', 'users', ['instagram_user_id', 'instagram_username'], unique=False)
    op.create_index('idx_users_last_login', 'users', ['last_login_at'], unique=False)
    
    # Add check constraints
    op.create_check_constraint(
        'valid_email_format',
        'users',
        "email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'"
    )
    op.create_check_constraint(
        'email_min_length',
        'users',
        'char_length(email) >= 5'
    )
    op.create_check_constraint(
        'full_name_min_length',
        'users',
        'char_length(full_name) >= 2 OR full_name IS NULL'
    )
    op.create_check_constraint(
        'non_negative_failed_attempts',
        'users',
        'failed_login_attempts >= 0'
    )
    op.create_check_constraint(
        'non_negative_login_count',
        'users',
        'login_count >= 0'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop check constraints first
    op.drop_constraint('non_negative_login_count', 'users', type_='check')
    op.drop_constraint('non_negative_failed_attempts', 'users', type_='check')
    op.drop_constraint('full_name_min_length', 'users', type_='check')
    op.drop_constraint('email_min_length', 'users', type_='check')
    op.drop_constraint('valid_email_format', 'users', type_='check')
    
    op.drop_index('idx_users_last_login', table_name='users')
    op.drop_index('idx_users_instagram_info', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_index('idx_users_active_verified', table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.drop_column('users', 'locked_until')
    op.drop_column('users', 'failed_login_attempts')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'language')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'instagram_username')
    # ### end Alembic commands ###
